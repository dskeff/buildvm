#!/bin/bash
#
# Author : Vikram Khatri
#
# Purpose: Generate SSH keys
#

set +x

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

if [ $# -lt 4 ] ; then
    echo "Usage: $0 USER_NAME USRER_PASSWORD USER_GROUP USER_HOME"
    echo "Usage: $0 root password root /root"
    echo "Usage: $0 db2psc password db2iadm /home/db2psc"
    exit 1
fi

function runrcmd ()
{
     expect -c "
     set timeout 20
     spawn $1
     expect \"*assword:*\" { send \"$USERPW\r\" }
     expect \"(.*)\r\"
    " >> $LOGFILE
}


USERNM=$1
USERPW=$2
USERGP=$3
USERHM=$4
SCHOME=/root/bin/backup
IPFILE=$SCHOME/ip.txt
KNOWN_HOSTS=$SCHOME/known_hosts
LOGFILE=/tmp/genSSH${USERNM}.log
SSH="/usr/bin/ssh -q -o StrictHostKeyChecking=no"
SCP="/usr/bin/scp -q -o StrictHostKeyChecking=no"

> $LOGFILE
> $KNOWN_HOSTS
############### Build server list from ip.txt #####
i=0
while read a b c d
do
  SHORTNM=${d%%.*}
  servers[$i]=$SHORTNM
  ((i++))
  echo Generate hosts keys for $SHORTNM
  ssh-keyscan $SHORTNM >> $KNOWN_HOSTS
  ssh-keyscan $d >> $KNOWN_HOSTS
  ssh-keyscan $b >> $KNOWN_HOSTS
  ssh-keyscan $b,$SHORTNM,$d >> $KNOWN_HOSTS
done < $IPFILE
echo "server list " ${servers[@]}

########################################################
for ((i = 0; i < ${#servers[@]}; ++i));
do
  server=${servers[$i]};
  echo Deleting ${USERHM}/.ssh on $server
  runrcmd "${SSH} $server \"rm -fr ${USERHM}/.ssh\""
  echo Generating private/public keys for ${USERHM}/.ssh on $server
  runrcmd "${SSH} $server \"su -l ${USERNM} -c \\\"ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa\\\"\""
  echo Sending known_hosts to the ${USERHM}/.ssh on $server
  runrcmd "${SCP} $SCHOME/known_hosts ${USERNM}@$server:${USERHM}/.ssh/known_hosts"
  echo Setting chmod 600 to ${USERHM}/.ssh/known_hosts on $server
  runrcmd "${SSH} $server \"chmod 600 ${USERHM}/.ssh/known_hosts\""
  echo Fixing owner for ${USERHM}/.ssh/known_hosts on $server
  runrcmd "${SSH} $server \"chown ${USERNM}.${USERGP} ${USERHM}/.ssh/known_hosts\""
  echo Getting id_rsa.pub from ${USERHM}/.ssh on $server
  runrcmd "${SCP} ${USERNM}@$server:${USERHM}/.ssh/id_rsa.pub $SCHOME/${USERNM}.id_rsa.pub.$server"
done
> $SCHOME/authorized_keys.${USERNM}
for server in ${servers[@]};
do
  echo Combining id_rsa.pub from $server into authorized_keys
  cat $SCHOME/${USERNM}.id_rsa.pub.$server >> $SCHOME/authorized_keys.${USERNM}
  cat $SCHOME/${USERNM}.id_rsa.pub.$server >> $SCHOME/authorized_keys.${USERNM}
  rm -f $SCHOME/${USERNM}.id_rsa.pub.$server
  rm -f $SCHOME/${USERNM}.id_rsa.pub.$server
done
echo Copying authorized_keys
for server in ${servers[@]};
do
  echo Copying authorized_keys of ${USERNM} to the $server
  runrcmd "${SCP} $SCHOME/authorized_keys.${USERNM} ${USERNM}@$server:${USERHM}/.ssh/authorized_keys"
  echo Fixing authorized_keys permissions for ${USERNM} on the $server
  ${SSH} $server "chmod 600 ${USERHM}/.ssh/authorized_keys"
  echo Fixing owner for authorized_keys for ${USERNM} on the $server
  ${SSH} $server "chown ${USERNM}:${USERGP} ${USERHM}/.ssh/authorized_keys"
done
rm -f $SCHOME/authorized_keys.${USERNM}
rm -f $KNOWN_HOSTS
